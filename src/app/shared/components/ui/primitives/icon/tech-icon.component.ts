import {ChangeDetectionStrategy, Component, computed, input} from '@angular/core';

type TechName =
  'angular'
  | 'react'
  | 'typescript'
  | 'javascript'
  | 'nodejs'
  | 'tailwind'
  | 'firebase'
  | 'java'
  | 'html'
  | 'css'
  | 'git'
  | 'rxjs';

interface TechIconData {
  viewBox: string;
  path: string;
  fill: string;
}

const TECH_ICONS: Record<TechName, TechIconData> = {
  angular: {
    viewBox: '0 0 24 24',
    path: 'M12 2L2 6.5 3.5 17.5 12 22 20.5 17.5 22 6.5 12 2M12 4.7L18.7 7.2 17.5 16.5 12 19.7 6.5 16.5 5.3 7.2 12 4.7M12 6.5L8.5 14.5H10L10.8 12.5H13.2L14 14.5H15.5L12 6.5M12 9L12.8 11H11.2L12 9Z',
    fill: '#DD0031'
  },
  react: {
    viewBox: '0 0 24 24',
    path: 'M12 10.11C13.03 10.11 13.87 10.95 13.87 12C13.87 13 13.03 13.85 12 13.85C10.97 13.85 10.13 13 10.13 12C10.13 10.95 10.97 10.11 12 10.11M7.37 20C8 20.38 9.38 19.8 10.97 18.3C10.45 17.71 9.94 17.07 9.46 16.4C8.64 16.32 7.83 16.2 7.06 16.04C6.55 18.18 6.74 19.65 7.37 20M8.08 14.26L7.79 13.75C7.68 14.04 7.57 14.33 7.5 14.61C7.77 14.67 8.07 14.72 8.38 14.77C8.28 14.6 8.18 14.43 8.08 14.26M14.62 13.5L15.43 12L14.62 10.5C14.32 9.97 14 9.5 13.71 9.03C13.17 9 12.6 9 12 9C11.4 9 10.83 9 10.29 9.03C10 9.5 9.68 9.97 9.38 10.5L8.57 12L9.38 13.5C9.68 14.03 10 14.5 10.29 14.97C10.83 15 11.4 15 12 15C12.6 15 13.17 15 13.71 14.97C14 14.5 14.32 14.03 14.62 13.5M12 6.78C11.81 7 11.61 7.23 11.41 7.5C11.61 7.5 11.8 7.5 12 7.5C12.2 7.5 12.39 7.5 12.59 7.5C12.39 7.23 12.19 7 12 6.78M12 17.22C12.19 17 12.39 16.77 12.59 16.5C12.39 16.5 12.2 16.5 12 16.5C11.8 16.5 11.61 16.5 11.41 16.5C11.61 16.77 11.81 17 12 17.22M16.62 4C16 3.62 14.62 4.2 13.03 5.7C13.55 6.29 14.06 6.93 14.54 7.6C15.36 7.68 16.17 7.8 16.94 7.96C17.45 5.82 17.26 4.35 16.62 4M15.92 9.74L16.21 10.25C16.32 9.96 16.43 9.67 16.5 9.39C16.23 9.33 15.93 9.28 15.62 9.23C15.72 9.4 15.82 9.57 15.92 9.74M17.37 2.69C18.84 3.53 19 5.74 18.38 8.32C20.92 9.07 22.75 10.31 22.75 12C22.75 13.69 20.92 14.93 18.38 15.68C19 18.26 18.84 20.47 17.37 21.31C15.91 22.15 13.92 21.19 12 19.36C10.08 21.19 8.09 22.15 6.62 21.31C5.16 20.47 5 18.26 5.62 15.68C3.08 14.93 1.25 13.69 1.25 12C1.25 10.31 3.08 9.07 5.62 8.32C5 5.74 5.16 3.53 6.62 2.69C8.09 1.85 10.08 2.81 12 4.64C13.92 2.81 15.91 1.85 17.37 2.69M17.08 12C17.42 12.75 17.72 13.5 17.97 14.26C20.07 13.63 21.25 12.73 21.25 12C21.25 11.27 20.07 10.37 17.97 9.74C17.72 10.5 17.42 11.25 17.08 12M6.92 12C6.58 11.25 6.28 10.5 6.03 9.74C3.93 10.37 2.75 11.27 2.75 12C2.75 12.73 3.93 13.63 6.03 14.26C6.28 13.5 6.58 12.75 6.92 12M15.92 14.26C15.82 14.43 15.72 14.6 15.62 14.77C15.93 14.72 16.23 14.67 16.5 14.61C16.43 14.33 16.32 14.04 16.21 13.75L15.92 14.26M13.03 18.3C14.62 19.8 16 20.38 16.62 20C17.26 19.65 17.45 18.18 16.94 16.04C16.17 16.2 15.36 16.32 14.54 16.4C14.06 17.07 13.55 17.71 13.03 18.3M8.08 9.74C8.18 9.57 8.28 9.4 8.38 9.23C8.07 9.28 7.77 9.33 7.5 9.39C7.57 9.67 7.68 9.96 7.79 10.25L8.08 9.74M10.97 5.7C9.38 4.2 8 3.62 7.37 4C6.74 4.35 6.55 5.82 7.06 7.96C7.83 7.8 8.64 7.68 9.46 7.6C9.94 6.93 10.45 6.29 10.97 5.7Z',
    fill: '#61DAFB'
  },
  typescript: {
    viewBox: '0 0 24 24',
    path: 'M3 3H21V21H3V3M13.71 17.86C14.21 18.84 15.22 19.59 16.8 19.59C18.4 19.59 19.6 18.76 19.6 17.23C19.6 15.82 18.79 15.19 17.35 14.57L16.93 14.39C16.2 14.08 15.89 13.87 15.89 13.37C15.89 12.96 16.2 12.64 16.7 12.64C17.18 12.64 17.5 12.85 17.79 13.37L19.1 12.5C18.55 11.54 17.77 11.17 16.7 11.17C15.19 11.17 14.22 12.13 14.22 13.4C14.22 14.78 15.03 15.43 16.25 15.95L16.67 16.13C17.45 16.47 17.91 16.68 17.91 17.26C17.91 17.74 17.46 18.09 16.76 18.09C15.93 18.09 15.45 17.66 15.09 17.06L13.71 17.86M13 11.25H8V12.75H9.5V20H11.25V12.75H13V11.25Z',
    fill: '#3178C6'
  },
  javascript: {
    viewBox: '0 0 24 24',
    path: 'M3 3H21V21H3V3M7.73 18.04C8.13 18.89 8.92 19.59 10.27 19.59C11.77 19.59 12.8 18.79 12.8 17.04V11.26H11.1V17C11.1 17.86 10.75 18.08 10.2 18.08C9.62 18.08 9.38 17.68 9.11 17.21L7.73 18.04M13.71 17.86C14.21 18.84 15.22 19.59 16.8 19.59C18.4 19.59 19.6 18.76 19.6 17.23C19.6 15.82 18.79 15.19 17.35 14.57L16.93 14.39C16.2 14.08 15.89 13.87 15.89 13.37C15.89 12.96 16.2 12.64 16.7 12.64C17.18 12.64 17.5 12.85 17.79 13.37L19.1 12.5C18.55 11.54 17.77 11.17 16.7 11.17C15.19 11.17 14.22 12.13 14.22 13.4C14.22 14.78 15.03 15.43 16.25 15.95L16.67 16.13C17.45 16.47 17.91 16.68 17.91 17.26C17.91 17.74 17.46 18.09 16.76 18.09C15.93 18.09 15.45 17.66 15.09 17.06L13.71 17.86Z',
    fill: '#F7DF1E'
  },
  nodejs: {
    viewBox: '0 0 24 24',
    path: 'M12 1.85C11.73 1.85 11.45 1.92 11.22 2.05L3.78 6.35C3.3 6.63 3 7.15 3 7.71V16.29C3 16.85 3.3 17.37 3.78 17.65L5.73 18.77C6.68 19.23 7.17 19.22 7.57 19.22C8.86 19.22 9.59 18.42 9.59 17.07V8.61C9.59 8.47 9.47 8.34 9.33 8.34H8.5C8.36 8.34 8.23 8.47 8.23 8.61V17.07C8.23 17.71 7.61 18.31 6.5 17.77L4.5 16.62C4.45 16.59 4.41 16.54 4.41 16.48V7.71C4.41 7.65 4.45 7.6 4.5 7.57L11.94 3.27C11.99 3.24 12.05 3.24 12.1 3.27L19.54 7.57C19.59 7.6 19.63 7.65 19.63 7.71V16.29C19.63 16.35 19.59 16.4 19.54 16.43L12.1 20.73C12.05 20.76 11.99 20.76 11.94 20.73L10.05 19.65C10 19.62 9.94 19.61 9.88 19.63C9.46 19.84 9.37 19.87 8.97 20C8.86 20.03 8.7 20.09 9.03 20.27L11.22 21.56C11.45 21.69 11.73 21.76 12 21.76C12.27 21.76 12.55 21.69 12.78 21.56L20.22 17.26C20.7 16.98 21 16.46 21 15.9V7.31C21 6.75 20.7 6.23 20.22 5.95L12.78 1.65C12.55 1.52 12.27 1.45 12 1.45M14.28 9.36C11.5 9.36 10.77 10.5 10.77 11.58C10.77 11.72 10.89 11.85 11.03 11.85H11.88C12 11.85 12.11 11.74 12.13 11.62C12.27 10.88 12.6 10.5 14.28 10.5C15.68 10.5 16.23 10.84 16.23 11.69C16.23 12.26 16.03 12.59 14.03 12.77C12.38 12.92 11.13 13.33 11.13 14.88C11.13 16.27 12.17 17 13.87 17C15.94 17 16.96 16.23 17.26 14.96C17.27 14.89 17.26 14.82 17.23 14.76C17.2 14.7 17.14 14.66 17.08 14.66H16.22C16.11 14.66 16 14.76 15.97 14.87C15.69 15.79 15.14 16.09 14 16.09C12.61 16.09 12.43 15.51 12.43 15.04C12.43 14.38 12.61 14.15 14.41 13.92C16.19 13.69 17.53 13.24 17.53 11.67C17.53 10.16 16.37 9.36 14.28 9.36Z',
    fill: '#339933'
  },
  tailwind: {
    viewBox: '0 0 24 24',
    path: 'M12 6C9.33 6 7.67 7.33 7 10C8 8.67 9.17 8.17 10.5 8.5C11.26 8.67 11.81 9.24 12.41 9.86C13.39 10.88 14.53 12 17 12C19.67 12 21.33 10.67 22 8C21 9.33 19.83 9.83 18.5 9.5C17.74 9.33 17.2 8.76 16.59 8.14C15.61 7.12 14.47 6 12 6M7 12C4.33 12 2.67 13.33 2 16C3 14.67 4.17 14.17 5.5 14.5C6.26 14.67 6.8 15.24 7.41 15.86C8.39 16.88 9.53 18 12 18C14.67 18 16.33 16.67 17 14C16 15.33 14.83 15.83 13.5 15.5C12.74 15.33 12.2 14.76 11.59 14.14C10.61 13.12 9.47 12 7 12Z',
    fill: '#38BDF8'
  },
  firebase: {
    viewBox: '0 0 24 24',
    path: 'M3.89 15.67L6.2 3.27C6.29 2.87 6.82 2.68 7.14 2.93L9 4.5L3.89 15.67M16.12 4.26L14.09 1.71C13.83 1.4 13.38 1.4 13.12 1.7L11.38 4.5L16.12 4.26M20.11 15.68L17.85 5.39C17.81 5.2 17.68 5.03 17.5 4.95C17.32 4.86 17.11 4.86 16.93 4.95L4.5 17.5L11.61 21.5C11.85 21.66 12.15 21.66 12.39 21.5L20.11 15.68Z',
    fill: '#FFCA28'
  },
  java: {
    viewBox: '0 0 24 24',
    path: 'M8.851 18.56S8.257 19.138 9.447 19.27C10.84 19.423 11.59 19.402 13.273 19.067C13.273 19.067 13.671 19.347 14.203 19.546C9.56 21.511 3.802 19.483 8.851 18.56M8.276 15.933S7.594 16.581 8.784 16.693C10.314 16.835 11.619 16.85 13.888 16.379C13.888 16.379 14.172 16.64 14.581 16.772C9.03 18.374 2.906 16.808 8.276 15.933M13.116 11.475C13.843 12.308 12.982 13.051 12.982 13.051S14.48 12.352 13.893 11.188C13.346 10.082 12.888 9.529 16.205 7.483C16.205 7.483 9.708 9.173 13.116 11.475Z',
    fill: '#007396'
  },
  html: {
    viewBox: '0 0 24 24',
    path: 'M12 17.56L16.07 16.43L16.62 10.33H9.38L9.2 8.3H16.8L17 6.31H7L7.56 12.32H14.45L14.22 14.9L12 15.5L9.78 14.9L9.64 13.24H7.64L7.93 16.43L12 17.56M4.07 3H19.93L18.5 19.2L12 21L5.5 19.2L4.07 3Z',
    fill: '#E34F26'
  },
  css: {
    viewBox: '0 0 24 24',
    path: 'M5 3L4.35 6.34H17.94L17.5 8.5H3.92L3.26 11.83H16.85L16.09 15.64L10.61 17.45L5.86 15.64L6.19 14H2.85L2.06 18.23L9.91 21L18.96 18.23L20.16 11.97L20.4 10.76L21.94 3H5Z',
    fill: '#1572B6'
  },
  git: {
    viewBox: '0 0 24 24',
    path: 'M21.62 11.11L12.89 2.38C12.5 1.99 11.87 1.99 11.48 2.38L9.63 4.23L11.89 6.49C12.31 6.35 12.79 6.44 13.14 6.79C13.49 7.14 13.58 7.62 13.44 8.04L15.63 10.23C16.05 10.09 16.53 10.18 16.88 10.53C17.37 11.02 17.37 11.8 16.88 12.29C16.39 12.78 15.61 12.78 15.12 12.29C14.75 11.92 14.67 11.38 14.87 10.94L12.83 8.9V15.28C12.95 15.34 13.06 15.42 13.16 15.52C13.65 16.01 13.65 16.79 13.16 17.28C12.67 17.77 11.89 17.77 11.4 17.28C10.91 16.79 10.91 16.01 11.4 15.52C11.53 15.39 11.68 15.29 11.85 15.23V8.8C11.68 8.74 11.53 8.64 11.4 8.51C11.03 8.14 10.95 7.6 11.15 7.16L8.92 4.93L2.38 11.47C1.99 11.86 1.99 12.49 2.38 12.88L11.11 21.61C11.5 22 12.13 22 12.52 21.61L21.62 12.51C22.01 12.12 22.01 11.5 21.62 11.11Z',
    fill: '#F05032'
  },
  rxjs: {
    viewBox: '0 0 24 24',
    path: 'M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2M12 20C7.59 20 4 16.41 4 12C4 7.59 7.59 4 12 4C16.41 4 20 7.59 20 12C20 16.41 16.41 20 12 20M16.59 7.58L10 14.17L7.41 11.59L6 13L10 17L18 9L16.59 7.58Z',
    fill: '#B7178C'
  }
};

function getTech(name: string): TechName {
  const lower = name.toLowerCase().trim();
  if (lower.includes('angular')) return 'angular';
  if (lower.includes('react')) return 'react';
  if (lower.includes('typescript') || lower === 'ts') return 'typescript';
  if (lower.includes('javascript') || lower === 'js') return 'javascript';
  if (lower.includes('node') || lower === 'nodejs') return 'nodejs';
  if (lower.includes('tailwind')) return 'tailwind';
  if (lower.includes('firebase')) return 'firebase';
  if (lower.includes('java')) return 'java';
  if (lower.includes('html')) return 'html';
  if (lower.includes('css') || lower === 'scss') return 'css';
  if (lower.includes('git')) return 'git';
  if (lower.includes('rxjs')) return 'rxjs';
  return 'html';
}

@Component({
  selector: 'app-tech-icon',
  standalone: true,
  changeDetection: ChangeDetectionStrategy.OnPush,
  template: `
    <svg
      [attr.viewBox]="iconData().viewBox"
      [attr.width]="size()"
      [attr.height]="size()"
      [attr.class]="className()"
    >
      <path [attr.d]="iconData().path" [attr.fill]="iconData().fill"/>
    </svg>
  `
})
export class TechIconComponent {
  readonly tech = input<string>('');
  readonly name = input<TechName>();
  readonly size = input<number>(24);
  readonly className = input<string>('');

  readonly iconData = computed(() => {
    const explicitTech = this.name();
    const detectedTech = explicitTech || getTech(this.tech());
    return TECH_ICONS[detectedTech];
  });
}
